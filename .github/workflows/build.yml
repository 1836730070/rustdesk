name: Build RustDesk

on:
  workflow_dispatch:

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      run: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs/x86_64
        .\rustup-init.exe -y --default-toolchain stable
        echo "C:\Users\runneradmin\.cargo\bin" >> $env:GITHUB_PATH

    - name: Install dependencies
      run: |
        choco install -y nasm yasm

    - name: Build
      run: |
        cargo build --release --bin rustdesk

    - name: Upload Windows binary
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-windows
        path: target/release/rustdesk.exe

  build-linux:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          g++ gcc git curl wget nasm yasm \
          libgtk-3-dev clang libxcb-randr0-dev \
          libxdo-dev libxfixes-dev libxcb-shape0-dev \
          libxcb-xfixes0-dev libasound2-dev libpulse-dev \
          cmake pkg-config

    - name: Build
      run: |
        cargo build --release --bin rustdesk

    - name: Upload Linux binary
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-linux
        path: target/release/rustdesk
