name: Build RustDesk Docker Windows

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: 设置 Docker 构建环境
      run: |
        # 检查是否有 Dockerfile
        if (Test-Path "Dockerfile") {
            echo "使用现有 Dockerfile"
        } else {
            # 创建简单的 Dockerfile
            @"
            FROM rust:latest
            RUN apt-get update && apt-get install -y \
                libgtk-3-dev \
                libxdo-dev \
                libxfixes-dev \
                libxcb-shape0-dev \
                libxcb-xfixes0-dev \
                libasound2-dev \
                libpulse-dev \
                pkg-config \
                cmake \
                nasm \
                yasm
            WORKDIR /app
            COPY . .
            RUN cargo build --release --bin rustdesk
            "@ > Dockerfile
        }

    - name: 在 Docker 中构建 Linux 版本
      run: |
        docker build -t rustdesk-build .
        docker run --rm -v ${pwd}/target:/app/target rustdesk-build

    - name: 上传 Linux 版本
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-linux-docker
        path: target/release/rustdesk
